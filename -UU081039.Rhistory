facultiestable <- dppsurvey %>%
count(Faculty, sort=TRUE) %>%
ggplot(., aes(x=Faculty)) + geom_bar()
print(facultiestable)
facultiestable <- dppsurvey %>%
count(Faculty, sort=TRUE) %>%
ggplot(.) + geom_bar()
print(facultiestable)
facultiestable <- dppsurvey %>%
count(Faculty, sort=TRUE) %>%
ggplot(., aes(x=Faculty, y= n)) + geom_bar()
print(facultiestable)
facultiestable <- dppsurvey %>%
count(Faculty, sort=TRUE) %>%
ggplot(., aes(Faculty)) + geom_bar()
print(facultiestable)
facultiestable <- dppsurvey %>%
count(Faculty, sort=TRUE) %>%
ggplot(., aes(.)) + geom_bar()
print(facultiestable)
facultiestable <- dppsurvey %>%
count(Faculty, sort=TRUE) #%>%
#ggplot(., aes(.)) + geom_bar()
print(facultiestable)
ggplot(facultiestable, aes(facultiestable$n)) + geom_bar()
ggplot(dppsurvey, aes(Faculty)) + geom_bar()
ggplot(dppsurvey, aes(Faculty, y= fl)) + geom_bar()
ggplot(dppsurvey, aes(y= fl)) + geom_bar()
ggplot(dppsurvey, aes(y = fl)) + geom_bar()
ggplot(dppsurvey, aes(x= Faculty, y = fl)) + geom_bar()
ggplot(dppsurvey, aes(x= Faculty)) + geom_bar()
ggplot(dppsurvey, aes(x= Faculty)) + geom_bar() + geom_label()
ggplot(dppsurvey, aes(x= Faculty)) + geom_bar() + geom_label(position="nudge")
ggplot(dppsurvey, aes(x= Faculty)) + geom_bar()
ggplot(dppsurvey, aes(x= Faculty)) + geom_bar() + labs(x = "Faculty", y = "Number of respondents", title = "Respondents per faculty")
ggplot(dppsurvey, aes(x= Faculty)) + geom_bar() + labs(x = "Faculty", y = "Number of respondents", title = "Respondents per faculty") + guides(x = guide_axis(n.dodge = 2))
ggplot(dppsurvey, aes(x= Faculty)) + geom_bar() + labs(x = "Faculty", y = "Number of respondents", title = "Respondents per faculty") + guides(x = guide_axis(angle = 45))
ggplot(dppsurvey, aes(x= Faculty)) + geom_bar() + labs(x = "Faculty", y = "Number of respondents", title = "Respondents per faculty") + guides(x = guide_axis(angle = 90))
ggplot(dppsurvey, aes(x= Faculty)) + geom_bar() + labs(x = "Faculty", y = "Number of respondents", title = "Respondents per faculty") + guides(x = guide_axis(angle = 40))
ggplot(facultiestable, aes()) + geom_bar() + labs(x = "Faculty", y = "Number of respondents", title = "Respondents per faculty") + guides(x = guide_axis(angle = 40))
ggplot(facultiestable, aes(x = Faculty)) + geom_bar() + labs(x = "Faculty", y = "Number of respondents", title = "Respondents per faculty") + guides(x = guide_axis(angle = 40))
ggplot(facultiestable, aes(x = n)) + geom_bar() + labs(x = "Faculty", y = "Number of respondents", title = "Respondents per faculty") + guides(x = guide_axis(angle = 40))
facultiestable
knitr::opts_chunk$set(echo = FALSE)
# install.packages("data.table")
library(data.table)
# install.packages("dplyr")
library(dplyr)
# install.packages("ggplot2")
library(ggplot2)
datafile <- "../data/raw/Data_Privacy_Survey_20220328.csv"
dppsurvey <- fread(datafile, na.strings = "")
# Skip the first 2 rows as they contain the question text
dppsurvey <- dppsurvey[-c(1, 2), ]
# Skip the previews
dppsurvey <- dppsurvey[-grep("preview",
dppsurvey$DistributionChannel), ]
# Convert Duration into numeric variable
dppsurvey$Duration <- as.numeric(dppsurvey$`Duration (in seconds)`)
# Faculties
facultiestable <- dppsurvey %>%
count(Faculty, sort=TRUE)
print(facultiestable)
# TODO: some respondents filled out multiple faculties, these responses are saved as 1 (e.g. "medicine, geo") and need to be separated to be added to the count of the relevant faculties (e.g., "medicine", "geo"). This actually happens throughout the survey so a generic solution is needed.
# Graph of respondents per faculty
ggplot(dppsurvey, aes(x= Faculty)) +
geom_bar() +
labs(x = "Faculty", y = "Number of respondents", title = "Respondents per faculty") +
guides(x = guide_axis(angle = 40))
# Positions
positionsperfaculty <- dppsurvey %>%
group_by(Faculty) %>%
count(Position)
print(positionsperfaculty)
median(dppsurvey$Duration/60)
dim(dppsurvey)[1]
facultiestable
length(dppsurvey$Email_2_TEXT[!is.na(dppsurvey$Email_2_TEXT)])
# Select the people that left their email address
emailpeople <- dppsurvey %>%
filter(!is.na(Email_2_TEXT))
# Show which faculties they are from
emailpeople %>% count(Faculty, sort=TRUE)
# Show which positions they are from Positions
emailpeople %>%
group_by(Faculty) %>%
count(Position)
emailpeople
emailpeople %>% count(Faculty, sort=TRUE)
length(dppsurvey$Email_2_TEXT[!is.na(dppsurvey$Email_2_TEXT)])
knitr::opts_chunk$set(echo = FALSE)
# install.packages("data.table")
library(data.table)
# install.packages("dplyr")
library(dplyr)
# install.packages("ggplot2")
library(ggplot2)
datafile <- "../data/raw/Data_Privacy_Survey_20220328.csv"
dppsurvey <- fread(datafile, na.strings = "")
# Skip the first 2 rows as they contain the question text
dppsurvey <- dppsurvey[-c(1, 2), ]
# Skip the previews
dppsurvey <- dppsurvey[-grep("preview",
dppsurvey$DistributionChannel), ]
# Convert Duration into numeric variable
dppsurvey$Duration <- as.numeric(dppsurvey$`Duration (in seconds)`)
# Faculties
facultiestable <- dppsurvey %>%
count(Faculty, sort=TRUE)
print(facultiestable)
# TODO: some respondents filled out multiple faculties, these responses are saved as 1 (e.g. "medicine, geo") and need to be separated to be added to the count of the relevant faculties (e.g., "medicine", "geo"). This actually happens throughout the survey so a generic solution is needed.
# Graph of respondents per faculty
ggplot(dppsurvey, aes(x= Faculty)) +
geom_bar() +
labs(x = "Faculty", y = "Number of respondents", title = "Respondents per faculty") +
guides(x = guide_axis(angle = 40))
# Positions
positionsperfaculty <- dppsurvey %>%
group_by(Faculty) %>%
count(Position)
print(positionsperfaculty)
# Select the people that left their email address
emailpeople <- dppsurvey %>%
filter(!is.na(Email_2_TEXT))
# Show which faculties they are from
emailpeople %>% count(Faculty, sort=TRUE)
# Show which positions they are from Positions
emailpeople %>%
group_by(Faculty) %>%
count(Position)
head(dppsurvey$Better_support)
head(dppsurvey$Better_support_9_TEXT)
head(dppsurvey$Better_support_9_TEXT[!is.na(dppsurvey$Better_support_9_TEXT)])
dppsurvey$Consent_content_12_TEXT[!is.na(dppsurvey$Consent_content_12_TEXT)]
dppsurvey$Datatype_11_TEXT[!is.na(dppsurvey$Datatype_11_TEXT)]
dppsurvey$Personaldata_type_10_TEXT[!is.na(dppsurvey$Personaldata_type_10_TEXT)]
dppsurvey$Orgmeasures_16_TEXT[!is.na(dppsurvey$Orgmeasures_16_TEXT)]
dppsurvey$Storage_medium_8_TEXT[!is.na(dppsurvey$Storage_medium_8_TEXT)]
dppsurvey$Consentforms_7_TEXT[!is.na(dppsurvey$Consentforms_7_TEXT)]
dppsurvey$DPIA_Help_4_TEXT[!is.na(dppsurvey$DPIA_Help_4_TEXT)]
dppsurvey$Share_outside_UU_6_TEXT[!is.na(dppsurvey$Share_outside_UU_6_TEXT)]
dppsurvey$Share_measures_9_TEXT[!is.na(dppsurvey$Share_measures_9_TEXT)]
dppsurvey$Reason_NoPub_8_TEXT[!is.na(dppsurvey$Reason_NoPub_8_TEXT)]
dppsurvey$Sourcesused_18_TEXT[!is.na(dppsurvey$Sourcesused_18_TEXT)]
dppsurvey$Better_support_9_TEXT[!is.na(dppsurvey$Better_support_9_TEXT)]
dppsurvey$Challenges[!is.na(dppsurvey$Challenges)]
opentextresponses <- dppsurvey %>%
select(Faculty, Position, Challenges, Infotools_missing, Better_support_9_TEXT)
write.csv(opentextresponses, "dppsurvey_opentextresponses.csv")
write.csv(opentextresponses, "/data/raw/dppsurvey_opentextresponses.csv")
write.csv(opentextresponses, file.path("/data/raw/dppsurvey_opentextresponses.csv"))
write.csv(opentextresponses, file.path("data/raw/dppsurvey_opentextresponses.csv"))
knitr::opts_chunk$set(echo = FALSE)
# install.packages("data.table")
library(data.table)
# install.packages("dplyr")
library(dplyr)
# install.packages("ggplot2")
library(ggplot2)
datafile <- "../data/raw/Data_Privacy_Survey_20220329.csv"
dppsurvey <- fread(datafile, na.strings = "")
# Skip the first 2 rows as they contain the question text
dppsurvey <- dppsurvey[-c(1, 2), ]
# Skip the previews
dppsurvey <- dppsurvey[-grep("preview",
dppsurvey$DistributionChannel), ]
# Convert Duration into numeric variable
dppsurvey$Duration <- as.numeric(dppsurvey$`Duration (in seconds)`)
# Faculties
facultiestable <- dppsurvey %>%
count(Faculty, sort=TRUE)
print(facultiestable)
# TODO: some respondents filled out multiple faculties, these responses are saved as 1 (e.g. "medicine, geo") and need to be separated to be added to the count of the relevant faculties (e.g., "medicine", "geo"). This actually happens throughout the survey so a generic solution is needed.
# Graph of respondents per faculty
ggplot(dppsurvey, aes(x= Faculty)) +
geom_bar() +
labs(x = "Faculty", y = "Number of respondents", title = "Respondents per faculty") +
guides(x = guide_axis(angle = 40))
# Positions
positionsperfaculty <- dppsurvey %>%
group_by(Faculty) %>%
count(Position)
print(positionsperfaculty)
# Select the people that left their email address
emailpeople <- dppsurvey %>%
filter(!is.na(Email_2_TEXT))
# Show which faculties they are from
emailpeople %>% count(Faculty, sort=TRUE)
# Show which positions they are from Positions
emailpeople %>%
group_by(Faculty) %>%
count(Position)
emaildataset <- emailpeople %>%
select(Faculty, Position, Email)
View(emaildataset)
# Select the people that left their email address
emailpeople <- dppsurvey %>%
filter(!is.na(Email_2_TEXT))
# Show which faculties they are from
emailpeople %>% count(Faculty, sort=TRUE)
# Show which positions they are from Positions
emailpeople %>%
group_by(Faculty) %>%
count(Position)
emaildataset <- emailpeople %>%
select(Faculty, Position, Email_2_TEXT)
View(emaildataset)
Sys.Date()
todaysdate <- as.character(Sys.Date())
todaysdate
write.csv(emaildataset,file.path(paste0("../", todaysdate, "_emaildataset.csv")))
write.csv(emaildataset,file.path(paste0("../", todaysdate, "_emailaddresses.csv")))
emaildataset <- emailpeople %>%
select(Faculty, Position, Email_address = Email_2_TEXT)
View(emaildataset)
write.csv(emaildataset,file.path(paste0("../", todaysdate, "_emailaddresses.csv")))
write.csv(emaildataset,file.path(paste0("../", todaysdate, "_emailaddresses.csv")))
opentextresponses <- dppsurvey %>%
select(Faculty, Position, Challenges, Infotools_missing, Better_support_9_TEXT)
write.csv(opentextresponses, file.path(paste0("data/raw/", todaysdate, "_dppsurvey_opentextresponses.csv")))
opentextresponses <- dppsurvey %>%
select(Faculty, Position, Challenges, Infotools_missing, Better_support_9_TEXT)
write.csv(opentextresponses, file.path(paste0("data/raw/", todaysdate, "_dppsurvey_opentextresponses.csv")))
paste0("data/raw/", todaysdate, "_dppsurvey_opentextresponses.csv")
opentextresponses <- dppsurvey %>%
select(Faculty, Position, Challenges, Infotools_missing, Better_support_9_TEXT)
write.csv(opentextresponses, file.path(paste0("data/raw/", todaysdate, "_dppsurvey_opentextresponses.csv")))
opentextresponses <- dppsurvey %>%
select(Faculty, Position, Challenges, Infotools_missing, Better_support_9_TEXT)
write.csv(opentextresponses, file.path(paste0("/data/raw/", todaysdate, "_dppsurvey_opentextresponses.csv")))
getwd()
opentextresponses <- dppsurvey %>%
select(Faculty, Position, Challenges, Infotools_missing, Better_support_9_TEXT)
write.csv(opentextresponses, file.path(paste0("./data/raw/", todaysdate, "_dppsurvey_opentextresponses.csv")))
file.path(paste0("data/raw/", todaysdate, "_dppsurvey_opentextresponses.csv"))
View(opentextresponses)
opentextresponses <- dppsurvey %>%
select(Faculty, Position, Challenges, Infotools_missing, Better_support_9_TEXT)
write.csv(opentextresponses, file.path(paste0("data/raw/", todaysdate, "_dppsurvey_opentextresponses.csv")))
opentextresponses <- dppsurvey %>%
select(Faculty, Position, Challenges, Infotools_missing, Better_support_9_TEXT)
write.csv(opentextresponses, file.path(paste0("../data/raw/", todaysdate, "_dppsurvey_opentextresponses.csv")))
knitr::opts_chunk$set(echo = FALSE)
# install.packages("data.table")
library(data.table)
# install.packages("dplyr")
library(dplyr)
# install.packages("ggplot2")
library(ggplot2)
datafile <- "../data/raw/Data_Privacy_Survey_20220331.csv"
dppsurvey <- fread(datafile, na.strings = "")
# Skip the first 2 rows as they contain the question text
dppsurvey <- dppsurvey[-c(1, 2), ]
# Skip the previews
dppsurvey <- dppsurvey[-grep("preview",
dppsurvey$DistributionChannel), ]
# Convert Duration into numeric variable
dppsurvey$Duration <- as.numeric(dppsurvey$`Duration (in seconds)`)
# Faculties
facultiestable <- dppsurvey %>%
count(Faculty, sort=TRUE)
print(facultiestable)
# TODO: some respondents filled out multiple faculties, these responses are saved as 1 (e.g. "medicine, geo") and need to be separated to be added to the count of the relevant faculties (e.g., "medicine", "geo"). This actually happens throughout the survey so a generic solution is needed.
# Graph of respondents per faculty
ggplot(dppsurvey, aes(x= Faculty)) +
geom_bar() +
labs(x = "Faculty", y = "Number of respondents", title = "Respondents per faculty") +
guides(x = guide_axis(angle = 40))
# Positions
positionsperfaculty <- dppsurvey %>%
group_by(Faculty) %>%
count(Position)
print(positionsperfaculty)
# Select the people that left their email address
emailpeople <- dppsurvey %>%
filter(!is.na(Email_2_TEXT))
# Show which faculties they are from
emailpeople %>% count(Faculty, sort=TRUE)
# Show which positions they are from Positions
emailpeople %>%
group_by(Faculty) %>%
count(Position)
emaildataset <- emailpeople %>%
select(Faculty, Position, Email_address = Email_2_TEXT)
todaysdate <- as.character(Sys.Date())
write.csv(emaildataset, file.path(paste0("../", todaysdate, "_emailaddresses.csv")))
opentextresponses <- dppsurvey %>%
select(Faculty, Position, Challenges, Infotools_missing, Better_support_9_TEXT)
write.csv(opentextresponses, file.path(paste0("../data/raw/", todaysdate, "_dppsurvey_opentextresponses.csv")))
# Select the people that left their email address
emailpeople <- dppsurvey %>%
filter(!is.na(Email_2_TEXT))
# Show which faculties they are from
emailpeople %>% count(Faculty, sort=TRUE)
# Show which positions they are from Positions
emailpeople %>%
group_by(Faculty) %>%
count(Position)
emaildataset <- emailpeople %>%
select(Faculty, Position, Email_address = Email_2_TEXT)
todaysdate <- as.character(Sys.Date())
write.csv(emaildataset, file.path(paste0("../../", todaysdate, "_emailaddresses.csv")))
View(dppsurvey)
View(opentextresponses)
?count
datafile <- "../data/raw/Data_Privacy_Survey_20220331-2.csv"
dppsurvey <- fread(datafile, na.strings = "")
# Skip the first 2 rows as they contain the question text
dppsurvey <- dppsurvey[-c(1, 2), ]
# Skip the previews
dppsurvey <- dppsurvey[-grep("preview",
dppsurvey$DistributionChannel), ]
# Convert Duration into numeric variable
dppsurvey$Duration <- as.numeric(dppsurvey$`Duration (in seconds)`)
datafile <- "../data/raw/Data_Privacy_Survey_20220331.csv"" #-2.csv" # This file has multiple responses in separate columns (so very wide format)
datafile <- "../data/raw/Data_Privacy_Survey_20220331.csv" #-2.csv" # This file has multiple responses in separate columns (so very wide format)
dppsurvey <- fread(datafile, na.strings = "")
# Skip the first 2 rows as they contain the question text
dppsurvey <- dppsurvey[-c(1, 2), ]
# Skip the previews
dppsurvey <- dppsurvey[-grep("preview",
dppsurvey$DistributionChannel), ]
# Convert Duration into numeric variable
dppsurvey$Duration <- as.numeric(dppsurvey$`Duration (in seconds)`)
dppsurvey %>% summarise_if("Faculty",count())
stringr::str_detect("Faculty",dppsurvey)
# install.packages("data.table")
library(data.table)
# install.packages("tidyverse")
library(tidyverse)
# install.packages("data.table")
library(data.table)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
knitr::opts_chunk$set(echo = FALSE)
# install.packages("data.table")
library(data.table)
# install.packages("tidyverse")
library(tidyverse)
datafile <- "../data/raw/Data_Privacy_Survey_20220331.csv" #-2.csv" # This file has multiple responses in separate columns (so very wide format)
dppsurvey <- fread(datafile, na.strings = "")
# Skip the first 2 rows as they contain the question text
dppsurvey <- dppsurvey[-c(1, 2), ]
# Skip the previews
dppsurvey <- dppsurvey[-grep("preview",
dppsurvey$DistributionChannel), ]
# Skip unnecessary columns
# Convert Duration into numeric variable
dppsurvey$Duration <- as.numeric(dppsurvey$`Duration (in seconds)`)
head(dppsurvey$Status)
head(dppsurvey$IPAddress)
head(dppsurvey$Progress)
head(dppsurvey$ExternalReference
)
names(dppsurvey)
datafile <- "../data/raw/Data_Privacy_Survey_20220331.csv" #-2.csv" # This file has multiple responses in separate columns (so very wide format)
dppsurvey <- fread(datafile, na.strings = "")
# Skip the first 2 rows as they contain the question text
dppsurvey <- dppsurvey[-c(1, 2), ]
# Skip the previews
dppsurvey <- dppsurvey[-grep("preview",
dppsurvey$DistributionChannel), ]
# Convert Duration into numeric variable
dppsurvey$Duration <- as.numeric(dppsurvey$`Duration (in seconds)`)
# Skip unnecessary columns
dppsurvey <- dppsurvey[,-c("StartDate","EndDate","Status","IPAddress",
"Duration (in seconds)", "Finished", "RecordedDate",
"ResponseId", "RecipientLastName", "RecipientFirstName",
"RecipientEmail", "ExternalReference", "LocationLatitude",
"LocationLongitude", "DistributionChannel", "UserLanguage")]
View(dppsurvey)
dppsurvey <- dppsurvey %>%
select(Consent = "Yes, go to survey")
dppsurvey <- dppsurvey %>%
filter(Consent = "Yes, go to survey")
dppsurvey <- dppsurvey %>%
filter(Consent == "Yes, go to survey")
View(dppsurvey)
dppsurvey_long <- dppsurvey %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "value")
datafile <- "../data/raw/Data_Privacy_Survey_20220331-2.csv" #-2.csv" # This file has multiple responses in separate columns (so very wide format)
dppsurvey <- fread(datafile, na.strings = "")
# Skip the first 2 rows as they contain the question text
dppsurvey <- dppsurvey[-c(1, 2), ]
# Skip the previews
dppsurvey <- dppsurvey[-grep("preview",
dppsurvey$DistributionChannel), ]
# Convert Duration into numeric variable
dppsurvey$Duration <- as.numeric(dppsurvey$`Duration (in seconds)`)
# Skip unnecessary columns
dppsurvey <- dppsurvey[,-c("StartDate","EndDate","Status","IPAddress",
"Duration (in seconds)", "Finished", "RecordedDate",
"ResponseId", "RecipientLastName", "RecipientFirstName",
"RecipientEmail", "ExternalReference", "LocationLatitude",
"LocationLongitude", "DistributionChannel", "UserLanguage")]
# Select only consented data
dppsurvey <- dppsurvey %>%
filter(Consent == "Yes, go to survey")
View(dppsurvey)
datafile <- "../data/raw/Data_Privacy_Survey_20220331-3.csv" #-2.csv" # This file has multiple responses in separate columns (so very wide format but tidier)
dppsurvey <- fread(datafile, na.strings = "")
# Skip the first 2 rows as they contain the question text
dppsurvey <- dppsurvey[-c(1, 2), ]
# Skip the previews
dppsurvey <- dppsurvey[-grep("preview",
dppsurvey$DistributionChannel), ]
# Convert Duration into numeric variable
dppsurvey$Duration <- as.numeric(dppsurvey$`Duration (in seconds)`)
# Skip unnecessary columns
dppsurvey <- dppsurvey[,-c("StartDate","EndDate","Status","IPAddress",
"Duration (in seconds)", "Finished", "RecordedDate",
"ResponseId", "RecipientLastName", "RecipientFirstName",
"RecipientEmail", "ExternalReference", "LocationLatitude",
"LocationLongitude", "DistributionChannel", "UserLanguage")]
# Select only consented data
dppsurvey <- dppsurvey %>%
filter(Consent == "Yes")
View(dppsurvey)
dppsurvey_long <- dppsurvey %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "value")
dppsurvey_long <- dppsurvey %>%
pivot_longer(cols = starts_with("Faculty"),
names_to = "variable",
values_to = "value")
View(dppsurvey_long)
dppsurvey %>%
count(Faculty, sort=TRUE)
dppsurvey %>%
count(Faculty_1, sort=TRUE)
dppsurvey %>%
count(contains("Faculty"), sort=TRUE)
dppsurvey %>%
summarize(contains("Faculty"), sort=TRUE)
dppsurvey %>%
summarize(contains("Faculty"), n(),sort=TRUE)
datafile <- "../data/raw/Data_Privacy_Survey_20220331.csv" #-2.csv" # This file has multiple responses in separate columns (so very wide format but tidier)
dppsurvey <- fread(datafile, na.strings = "")
# Skip the first 2 rows as they contain the question text
dppsurvey <- dppsurvey[-c(1, 2), ]
# Skip the previews
dppsurvey <- dppsurvey[-grep("preview",
dppsurvey$DistributionChannel), ]
# Convert Duration into numeric variable
dppsurvey$Duration <- as.numeric(dppsurvey$`Duration (in seconds)`)
# Skip unnecessary columns
dppsurvey <- dppsurvey[,-c("StartDate","EndDate","Status","IPAddress",
"Duration (in seconds)", "Finished", "RecordedDate",
"ResponseId", "RecipientLastName", "RecipientFirstName",
"RecipientEmail", "ExternalReference", "LocationLatitude",
"LocationLongitude", "DistributionChannel", "UserLanguage")]
# Select only consented data
dppsurvey <- dppsurvey %>%
filter(Consent == "Yes, go to survey")
View(dppsurvey)
datafile <- "../data/raw/Data_Privacy_Survey_20220331.csv" #-2.csv" # This file has multiple responses in separate columns (so very wide format but tidier)
dppsurvey <- fread(datafile, na.strings = "")
# Skip the first 2 rows as they contain the question text
dppsurvey <- dppsurvey[-c(1, 2), ]
# Skip the previews
dppsurvey <- dppsurvey[-grep("preview",
dppsurvey$DistributionChannel), ]
# Convert Duration into numeric variable
dppsurvey$Duration <- as.numeric(dppsurvey$`Duration (in seconds)`)
# Skip unnecessary columns
dppsurvey <- dppsurvey[,-c("StartDate","EndDate","Status","IPAddress",
"Duration (in seconds)", "Finished", "RecordedDate",
"ResponseId", "RecipientLastName", "RecipientFirstName",
"RecipientEmail", "ExternalReference", "LocationLatitude",
"LocationLongitude", "DistributionChannel", "UserLanguage")]
# Select only consented data
dppsurvey <- dppsurvey %>%
filter(Consent == "Yes")
head(dppsurvey$Faculty)
View(dppsurvey)
datafile <- "../data/raw/Data_Privacy_Survey_20220331.csv" #-2.csv" # This file has multiple responses in separate columns (so very wide format but tidier)
dppsurvey <- fread(datafile, na.strings = "")
# Skip the first 2 rows as they contain the question text
dppsurvey <- dppsurvey[-c(1, 2), ]
# Skip the previews
dppsurvey <- dppsurvey[-grep("preview",
dppsurvey$DistributionChannel), ]
# Convert Duration into numeric variable
dppsurvey$Duration <- as.numeric(dppsurvey$`Duration (in seconds)`)
# Skip unnecessary columns
dppsurvey <- dppsurvey[,-c("StartDate","EndDate","Status","IPAddress",
"Duration (in seconds)", "Finished", "RecordedDate",
"ResponseId", "RecipientLastName", "RecipientFirstName",
"RecipientEmail", "ExternalReference", "LocationLatitude",
"LocationLongitude", "DistributionChannel", "UserLanguage")]
# Select only consented data
dppsurvey <- dppsurvey %>%
filter(Consent == "Yes, go to survey")
head(dppsurvey$Faculty)
str_split(dppsurvey$Faculty,",")
str_trim(str_split(dppsurvey$Faculty,","))
str_trim(str_split(dppsurvey$Faculty,","), side="both")
str_trim(str_split(dppsurvey$Faculty,","))
str_split(dppsurvey$Faculty,",")
?str_split
str_split(dppsurvey$Faculty,",",n = 1)
str_split(dppsurvey$Faculty,",",n = 2)
str_split(dppsurvey$Faculty,",",simplify = T)
str_split(dppsurvey$Faculty,",",simplify = T, n=1)
knitr::opts_chunk$set(echo = FALSE)
